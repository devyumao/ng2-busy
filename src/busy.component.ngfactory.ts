/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './busy.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './promise-tracker.service';
import * as import9 from '@angular/core/src/animation/animation_transition';
import * as import10 from '@angular/core/src/animation/animation_sequence_player';
import * as import11 from '@angular/core/src/animation/animation_styles';
import * as import12 from '@angular/core/src/animation/animation_style_util';
import * as import13 from '@angular/core/src/animation/animation_keyframe';
import * as import14 from '@angular/core/src/animation/animation_player';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from 'angular2-dynamic-component/DynamicComponent';
import * as import17 from '../node_modules/angular2-dynamic-component/DynamicComponent.ngfactory';
import * as import18 from '@angular/core/src/change_detection/change_detection_util';
import * as import19 from '@angular/core/src/linker/compiler';
import * as import20 from '@angular/http/src/http';
import * as import21 from 'angular2-dynamic-component/DynamicCache';
import * as import22 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '@angular/core/src/linker/template_ref';
import * as import24 from '@angular/common/src/directives/ng_if';
export class Wrapper_BusyComponent {
  /*private*/ _eventHandler:Function;
  context:import0.BusyComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.BusyComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_BusyComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_BusyComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.BusyComponent>;
  _BusyComponent_0_3:Wrapper_BusyComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BusyComponent_Host0,renderType_BusyComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-busy',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_BusyComponent0(this.viewUtils,this,0,this._el_0);
    this._BusyComponent_0_3 = new Wrapper_BusyComponent(this.injectorGet(import8.PromiseTrackerService,this.parentIndex));
    this.compView_0.create(this._BusyComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._BusyComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.BusyComponent) && (0 === requestNodeIndex))) { return this._BusyComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._BusyComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const BusyComponentNgFactory:import7.ComponentFactory<import0.BusyComponent> = new import7.ComponentFactory<import0.BusyComponent>('ng-busy',View_BusyComponent_Host0,import0.BusyComponent);
const styles_BusyComponent:any[] = ([] as any[]);
var BusyComponent_flyInOut_states:any = {
  '*': {},
  'void': {}
}
;
function BusyComponent_flyInOut_factory(view:import1.AppView<any>,element:any,currentState:any,nextState:any):import9.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'flyInOut'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = BusyComponent_flyInOut_states['*'];
  var startStateStyles:any = BusyComponent_flyInOut_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = BusyComponent_flyInOut_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'void') && true))) {
      player = new import10.AnimationSequencePlayer([view.renderer.animate(element,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          'opacity': '0',
          'transform': 'translateY(-40px)'
        }

      ]
      )),import12.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import13.AnimationKeyframe(0,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{}]))),
        new import13.AnimationKeyframe(1,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),300,0,'ease',previousPlayers)]);
    totalTime = 300;
  }
  if (((player == (null as any)) && (true && (nextState == 'void')))) {
      player = new import10.AnimationSequencePlayer([view.renderer.animate(element,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import13.AnimationKeyframe(0,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{
            'opacity': 'true',
            'transform': 'true'
          }
        ]))),
          new import13.AnimationKeyframe(1,new import11.AnimationStyles(import12.collectAndResolveStyles(collectedStyles,[{
            'opacity': '0',
            'transform': 'translateY(-40px)'
          }
        ])))
      ]
    ,300,0,'ease',previousPlayers)]);
    totalTime = 300;
  }
  if ((player == (null as any))) { (player = new import14.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import12.renderStyles(element,view.renderer,import12.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import10.AnimationSequencePlayer(previousPlayers).destroy();
  import12.renderStyles(element,view.renderer,import12.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'flyInOut',player);
  return new import9.AnimationTransition(player,currentState,nextState,totalTime);
}
class View_BusyComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  /*private*/ _vc_2:import15.ViewContainer;
  compView_2:import1.AppView<import16.DynamicComponent>;
  _DynamicComponent_2_5:import17.Wrapper_DynamicComponent;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_BusyComponent1,renderType_BusyComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_8 = import18.UNINITIALIZED;
    this._expr_9 = import18.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'DynamicComponent',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_2 = new import15.ViewContainer(2,0,this,this._el_2);
    this.compView_2 = new import17.View_DynamicComponent0(this.viewUtils,this,2,this._el_2);
    this._DynamicComponent_2_5 = new import17.Wrapper_DynamicComponent(this.parentView.injectorGet('DynamicExtraModules',this.parentIndex),this._vc_2.vcRef,this.parentView.injectorGet(import19.Compiler,this.parentIndex),this.parentView.injectorGet(import20.Http,this.parentIndex),this.parentView.injectorGet(import21.DynamicCache,this.parentIndex));
    this._text_3 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_2.create(this._DynamicComponent_2_5.context);
    this._text_4 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.DynamicComponent) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._DynamicComponent_2_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_9:any = (null as any);
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      var animationTransition_flyInOut:any = this.componentType.animations['flyInOut'](this,this._el_0,((this._expr_9 == import18.UNINITIALIZED)? 'void': this._expr_9),((currVal_9 == import18.UNINITIALIZED)? 'void': currVal_9));
      this._expr_9 = currVal_9;
    }
    const currVal_2_0_0:any = this.parentView.context.template;
    this._DynamicComponent_2_5.check_componentTemplate(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.context.context;
    this._DynamicComponent_2_5.check_componentContext(currVal_2_0_1,throwOnChange,false);
    this._DynamicComponent_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    const currVal_8:any = this.parentView.context.wrapperClass;
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_8);
      this._expr_8 = currVal_8;
    }
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this.compView_2.destroy();
    this._DynamicComponent_2_5.ngOnDestroy();
  }
  detachInternal():void {
    var animationTransition_flyInOut:any = this.componentType.animations['flyInOut'](this,this._el_0,this._expr_9,'void');
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_BusyComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_BusyComponent,{'flyInOut': BusyComponent_flyInOut_factory});
export class View_BusyComponent0 extends import1.AppView<import0.BusyComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import15.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import22.Wrapper_NgIf;
  _text_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BusyComponent0,renderType_BusyComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_1 = new import15.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import23.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import22.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import24.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.isActive();
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 1)) { return new View_BusyComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}